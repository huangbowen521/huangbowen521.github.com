---
layout: post
title: "2007年的一篇总结文章"
date: 2013-02-17 00:48
comments: true
categories: 生活感悟
tags: [总结, 感悟, 2007年]
---


今天整理电脑，偶然翻出一篇写于2007年的演讲稿。那是在一次班级团组织生活上向大家介绍自己学习计算机经验的一些感悟。

如今六年过去了，看到六年前自己的感悟，百般滋味涌上心头。六年的时间，从一个意气奋发的少年成长为孩子眼中的叔叔，不变的是对技术的从一而终的热爱。

看着当初稚嫩的自己进行的总结，某些条款至今让我受用，某些甚至自己至今还没做好。看来进步的pattern就是一个实践+总结+实践... 没有总结光有实践是万万不行的，这就像驴拉一辈子磨也不知道想办法用机器代替一样。

现在将演讲稿的内容贴出来，以后可以继续回味与总结。

<!-- more -->

我们学习计算机已经两年了。两年里大家到底学到多少东西，恐怕每个人的感受都不一样。无论你外表再花哨，肚子里有多少知识自己最清楚。我回顾以下自己的大学经历，并浅谈一下自己目前对学计算机的一点感受。

刚入大一，我对计算机了解很少，只会打游戏，和简单的OFFICE操作。但是我一向对计算机高手有种崇拜的感觉，老是幻想什么时候自己能成为其中一员。

大一的上半学期的时候，想自学 FLASH。自己就从图书馆借了好几本关于FLASH的书，找时间蹭机房钻研。恰逢那时侯要搞团组织生活，要我做个FLASH，我就带者压力开始钻研了。我发现自己钻研的好处是，我先是想实现某种效果，我才看书上是如何实现的，然后再操作实现，这样理解很深刻，能明白它的具体原理。

从第一次打开FLASH这个软件到作出第一个FLASH，不到两个月的时间。虽然它很丑，但是我很喜欢。可惜那时侯不知道把FLASH导成自带播放器的格式，结果在开团组织生活的时候由于机子上没装播放器而无法播放。

大一下半学期我们开了FLASH课，我渐渐明白不是所有的知识只有老师教了我们后，我们才能学会。上FLASH课的时候我基本没听过讲，因为感觉老师讲的好简单。后来就是那个第三届技能大赛开始了，我想自己既然学了FLASH，不如做个作品交上去吧。有好多人说就我那水平怎么可能获奖？我自己想贵在参与，得不得奖无所谓，就花了快一个月的时间做了个动画，在比赛截止的最后一天交过去了。最后竟然得了奖。看起来说的很轻松，做的过程中很辛苦。作动画要一层层的累加，一个场景一个场景的赶，有多少次都想放弃了，但是最终是坚持了下来。我从这个事情得出的结论是，如果你想好一件事情的话，你要付出更多的努力，要不厌其烦，想不劳而获只能让时间白白流逝。

后来放暑假了，计协要选一批人搞技术培训，我就参加了。那时侯培训分美工和编程两部分。我之所以没有选美工是发现我1没有艺术天分。就比如做FLASH动画，我懂的如何使用这个软件，但是却创作不出原始素材。2，鉴于我们这个专业我想往深层次钻。

师兄培训教我们的是ASP。在没培训之前我根本不知道ASP是什么东西，连dreamweaver也是第一次用。总共培训了5天，每天3个小时，其中一个半小时师兄讲，剩下的一个半小时自己上机操作，不会的问师兄。我给大家说下当时培训情况。第一天讲的是怎么配置IIS和建立站点。第二天讲dreamweaver的一些基本操作。第三天讲如何使用数据库，配数据源，并实现了登陆注册。第四天教我们做了个很简单的留言版。第五天没讲什么具体的东西，大概介绍了一个网站的开发过程。就这么短短的五天过后，师兄就让我们交个作品上来。

我做的是小型的魔兽论坛,被选中了成了协会的编程干部。

可是我来协会还没站稳，师兄给我们下达了一项任务，让我们几个搞编程的和搞美工的在开学前做个协会的新网站出来。我一听眼黑了。这个难度也太大了。但是心想有什么不会的可以问师兄，就硬者头皮做了。由于是第一次做网站，根本不懂什么规划，上去就编数据库写代码，结果给后来造成了不少的麻烦。

刚开始的时候，我们编程的还有不少人做，可是做着做着我发现好多都跑光了，只有我们班的几个还坚持在，我想可能是耐不住枯燥吧。暑假那段时间我相当于要同时学三门语言，HTML语言，ASP语言，外带个SQL查询语句。我经常碰到令人头痛的问题，刚开始，师兄还给我解答，后来干脆不耐烦说自己查书去，可能嫌我问的问题太幼稚了。我只好天天在BAIDU来BAIDU去的。

我们不是好多同学也选了网站建设课吗？不知道大家学的怎么样？这种东西就是入门有点痛苦，但是之后的路就好走多了，当你学的有感觉的时候，你就能感到你头脑中有一棵知识树，随着你知识的积累，那棵树越长越大，你越学越自信。我给大家建议个学习网站建设的方法，那网站建设课本后面不是有几个综合性的例子吗？你把那些代码都敲进去，调试运行成功，你就会发现你对ASP已经有了很深的了解了。这就是要先学会看别人的代码，要多思考。大家记得SESSION这个属性吧。老师给我们讲了如何用，但是好多人没整明白。我做协会网站的时候根本不知道有个SESSION这个属性。我在做会员专区的时候，遇到了一个问题，就是会员注册登陆后，进了会员专区要进行各种操作，可是我怎么能区别是那个会员在进行操作那，我想如果有一个变量传值能老跟着这个会员的操作多好。哪个时候我知道两种传值方式，表单传值和问号传值，但是这两种都只能传往一个页面，要在不同页面间传送很不方便。我从网上查资料，发现了SESSION这个属性，它很好的解决了我的问题。这样你就不会再犯糊涂它是干什么用的。

本来我们计划是开学前把网站做好挂出去的，可是我能力太差劲了，边学边做很慢，而且其他人都不知道跑那里去了。后来总算是都开学了一个多月才正式把网站做好，挂出来。通过做这个网站我学到了很多的东西。这对我以后的学习起到了很大的作用。

但在大二上半学期我走了弯路，那段时间我不知怎么想的，先弄了下XML，后来看了下ｊａｖａ的书，又编了好长时间的JSP代码，正是由于我学的太杂了，最后什么东西都没有学到，全是学一段时间觉的没什么收获就换了。我忘了当时刚开始学习ASP要吃好多的苦。而且我总想老师讲的课没用，不如自己学，忽略了对理论的学习，象数据结构，汇编我就学的不是很好。后来学期快结束时我才发现了问题的严重性，饿补了下，但是毕竟还有好多夹生的。

寒假里我看了点VC的书，LINUX方面的光盘，但是玩心太大，没掌握多少东西，感觉这个寒假是荒废了。

这个学期到现在，我加重了对理论的学习。这个学期的专业课我很少矿过，课上也大多认真听了。

我已经感觉到了学习理论的好处，使你能更地层的了解一个程序的运行。

我选了WINDOWS程序设计的课，恰巧我寒假里看了本VC的书，感觉能把书里的项目做出来。于是就花了些工夫，边看书，边听课，边做。不会了就从网上查资料，本来想问老师，可是问了一次老师后就不想问了。因为我的问题都太简单了，老师不好好给我说，不如看BAIDU来的快。

要知道当时我对VC++的MFC编程一无所知，甚至连建个工程都不会。没办法只好咬牙坚持了下来。由于这个学期时间很紧，为了赶进度，我就经常通宵。那个课本好烂，有好多错误的地方，我改的好痛苦.我这个人比较怪，白天很难静下心来写代码，只有晚上才能保持头脑清醒。终于在前几天是完成了程序大部分功能。

这个系统用了网络编程，数据库编程，对VC的涵盖还是很广的。我通过做这个学到了好多好多的东西。

比如说注册表编程。不知道有多少人能说出来WINDOWS的注册表是干什么用的，更别提对它的使用了。我这个系统就是需要把软件的一些基本配置保存在注册表中，看似很高深，其实用两个函数轻松搞定。有些东西根本没有你想象中的那么难，只要你做了一次就会发现。

说的这么乱，大家一定都晕了。

我本来想把我的感受总结成一，二，三等几个大点的。可是写作能力太差，搞不定。

简单说下吧。学计算机理论一定要抓好。千万不要忽略理论。理论不扎实的后果就是永远只能浮在很浅的层次上，想要深入就很难了。

* **学计算机要有钻劲，有恒心。**

* **学计算机不能跟着老师走。**如果你做东西时发现那里不会的时候，不要想老师没讲我就不会，就不去钻。这是很错误的。

* **学计算机要明确自己的方向，不能东学一块，西学一块。**要让自己的知识成为一个完整的系统。我上个学期就吃了这个亏，浪费了半个多学期。

* **学计算机要学会取舍。**人都是有惰性的。我的惰性就很大。现在我平常要上课，平时协会还有不少的日常事务要处理，有些空闲时间还想打会游戏，休闲下，这样很难有大的成就。我现在就在努力改观。

* **学计算机要多做项目。**只有做项目是最快的途径，最好的途径。我们不是开了课程设计吗？相信只要认真做了课程设计的同学每人的收获一定不少。我们以前是站在软件使用者角度上的，如果我们站在开发者角度上，就会学到很多东西。我们的VB。NET课，老师整天讲那些空间怎么用，我觉的稍微难点的有点价值听外，其他的完全可以自己去摸索，用不了多久你就会用了。如果你在学VB。NET的时候是报着做一个什么图书管理系统啊的什么的话，你如果能坚持下来的话，你就会发现你进步很快。

* **学计算机要做学会思考。**思考是小到对一个算法如何实现。大到对整个计算机编程的认识。这个我无法具体说，只能意会，不能言传。举个简单的例子，VC++与C++的区别，可能很多人还没搞不明白。

* **学计算机不能浮躁，不能自嗷，不能不懂装懂。**浮躁是大敌，我这方面做的还不够，但是我最起码知道要克服他。还有千万不要骄傲，目中无人，无论你是不是搞计算机的，千万不要盲目自大，这是做人的基本原则。不能不懂装懂，如果有人问了你一个问题你不会，你要勇敢的说出来你不会，并马上查资料去找答案。

 我只是一个普通的计算机科学与技术专业的学生。以前我梦想成为一名计算机高手，但是现在我甚至无法描绘一个真正的计算机高手是什么样的。

 每当我做出一个东西，哪怕只有一个人去使用它，那也是有用的。我也会高兴的。
